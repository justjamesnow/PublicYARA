rule xiebro_c2 : Windows Go {
    meta:
        author = "James E.C."
        description = "xiebroc2 MessagePack_WriteString and crypto functions"
    strings:
        /*
        48 8B 44 24 60                                  mov     rax, [rsp+70h+var_18.len]
        BB DB FF FF FF                                  mov     ebx, 0FFFFFFDBh ; uint8
        E8 6A 88 F9 FF                                  call    bytes__ptr_Buffer_WriteByte
        C7 44 24 24 00 00 00 00                         mov     dword ptr [rsp+70h+var_4E.ptr+2], 0
        90                                              nop
        48 8B 4C 24 30                                  mov     rcx, [rsp+70h+var_4E.len+6]
        0F C9                                           bswap   ecx
        89 4C 24 24                                     mov     dword ptr [rsp+70h+var_4E.ptr+2], ecx
        */

        $msgpack_writestring_0xDB = { BB DB FF FF FF E8 ?? ?? ?? ?? C7 44 24 ?? 00 00 00 00 [0-20] 0F C9 [0-16] 89 ?? ?? ?? 48 ?? ?? ?? ?? 48 ?? ?? ?? ?? B9 04 00 00 00 48 89 CF }

        /*
        48 8B 15 21 DD 2D 00                            mov     rdx, cs:qword_562200
        48 8B 35 22 DD 2D 00                            mov     rsi, cs:qword_562208
        48 8D 44 24 40                                  lea     rax, [rsp+80h+var_40]
        48 89 D3                                        mov     rbx, rdx
        48 89 F1                                        mov     rcx, rsi
        E8 4A AD DC FF                                  call    sub_4F240
        48 89 C7                                        mov     rdi, rax
        48 89 DE                                        mov     rsi, rbx
        49 89 C8                                        mov     r8, rcx
        48 8B 84 24 88 00 00 00                         mov     rax, [rsp+80h+arg_0] ; aes key into rax
        48 8B 9C 24 90 00 00 00                         mov     rbx, [rsp+80h+arg_8]
        48 8B 8C 24 98 00 00 00                         mov     rcx, [rsp+80h+arg_10]
        E8 84 FA EA FF                                  call    encrypt_aesecb
        */

        $aeskey_call_encrypt_aesecb = { 48 8B ?? ?? ?? ?? ?? 48 8B ?? ?? ?? ?? ?? 48 8D ?? ?? ?? 48 89 D3 48 89 F1 E8 ?? ?? ?? ?? 48 89 C7 48 89 DE 49 89 C8 48 8B 84 24 ?? ?? ?? ?? 48 8B 9C 24 ?? ?? ?? ?? 48 8B 8C 24 ?? ?? ?? ?? E8 }

        /*
        48 89 6C 24 68                                  mov     [rsp+70h+var_8], rbp
        48 8D 6C 24 68                                  lea     rbp, [rsp+70h+var_8]
        48 89 BC 24 90 00 00 00                         mov     [rsp+70h+arg_18], rdi
        48 89 8C 24 88 00 00 00                         mov     [rsp+70h+arg_10], rcx
        48 89 9C 24 80 00 00 00                         mov     [rsp+70h+arg_8], rbx
        48 89 44 24 78                                  mov     [rsp+70h+arg_0], rax
        48 89 F8                                        mov     rax, rdi # aes key into rax
        48 89 F3                                        mov     rbx, rsi
        4C 89 C1                                        mov     rcx, r8
        66 90                                           xchg    ax, ax
        E8 5B 67 FB FF                                  call    crypto_aes_NewCipher
        48 85 C9                                        test    rcx, rcx
        */

        $aeskey_mov_rax_rdi = { 48 89 6c 24 ?? 48 8d 6c 24 ?? 48 89 bc 24 ?? ?? ?? ?? 48 89 8c 24 ?? ?? ?? ?? 48 89 9c 24 ?? ?? ?? ?? 48 89 44 24 ?? 48 89 f8 48 89 f3 4c 89 c1 66 90 e8 ?? ?? ?? ?? 48 85 c9 }
    condition:
        filesize < 20MB and $msgpack_writestring_0xDB and ($aeskey_call_encrypt_aesecb or $aeskey_mov_rax_rdi)
}
